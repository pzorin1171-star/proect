let score = 0;
let currentLevel = 0;
let upgradePoints = 0;
let playerStats = {
    speed: 1,
    jump: 1,
    health: 1
};
let currentUser = null;
let isTeacher = false;

const levels = [
    {
        name: "–£—Ä–æ–≤–µ–Ω—å 1",
        difficulty: "easy",
        completed: false,
        stars: 0
    },
    {
        name: "–£—Ä–æ–≤–µ–Ω—å 2", 
        difficulty: "easy",
        completed: false,
        stars: 0
    },
    {
        name: "–£—Ä–æ–≤–µ–Ω—å 3",
        difficulty: "medium",
        completed: false,
        stars: 0
    }
];

// –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
let users = {
    teachers: [],
    students: []
};

// –ü–ï–†–í–´–ô –≠–ö–†–ê–ù - –í–´–ë–û–† –†–ï–ñ–ò–ú–ê
function showModeSelection() {
    const screen = document.getElementById('screen');
    screen.innerHTML = `
        <div style="text-align: center; padding: 50px;">
            <h1>–®–∫–æ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞</h1>
            <div style="margin: 40px 0;">
                <button 
                    onclick="showTeacherAuth()" 
                    style="font-size: 24px; padding: 20px 40px; margin: 20px; background: #4CAF50; color: white; border: none; border-radius: 10px; cursor: pointer;"
                >
                    üë®‚Äçüè´ –†–µ–∂–∏–º —É—á–∏—Ç–µ–ª—è
                </button>
                <br>
                <button 
                    onclick="showStudentAuth()" 
                    style="font-size: 24px; padding: 20px 40px; margin: 20px; background: #2196F3; color: white; border: none; border-radius: 10px; cursor: pointer;"
                >
                    üë®‚Äçüéì –†–µ–∂–∏–º —É—á–µ–Ω–∏–∫–∞
                </button>
            </div>
        </div>
    `;
}

// –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –£–ß–ò–¢–ï–õ–Ø
function showTeacherAuth() {
    const screen = document.getElementById('screen');
    screen.innerHTML = `
        <div style="max-width: 400px; margin: 0 auto; padding: 20px;">
            <h1>üë®‚Äçüè´ –†–µ–∂–∏–º —É—á–∏—Ç–µ–ª—è</h1>
            
            <div style="border: 2px solid #4CAF50; padding: 20px; margin: 20px 0; border-radius: 10px;">
                <h2>–í—Ö–æ–¥ –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π</h2>
                <input type="text" id="teacher-username" placeholder="–ù–∏–∫–Ω–µ–π–º" style="display: block; width: 100%; margin: 10px 0; padding: 10px; font-size: 16px;">
                <input type="password" id="teacher-password" placeholder="–ü–∞—Ä–æ–ª—å" style="display: block; width: 100%; margin: 10px 0; padding: 10px; font-size: 16px;">
                <button onclick="teacherLogin()" style="width: 100%; padding: 12px; background: #4CAF50; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer;">
                    –í–æ–π—Ç–∏
                </button>
            </div>
            
            <div style="border: 2px solid #FF9800; padding: 20px; margin: 20px 0; border-radius: 10px;">
                <h2>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—á–∏—Ç–µ–ª—è</h2>
                <input type="text" id="teacher-reg-username" placeholder="–ù–∏–∫–Ω–µ–π–º" style="display: block; width: 100%; margin: 10px 0; padding: 10px; font-size: 16px;">
                <input type="password" id="teacher-reg-password" placeholder="–ü–∞—Ä–æ–ª—å" style="display: block; width: 100%; margin: 10px 0; padding: 10px; font-size: 16px;">
                <button onclick="teacherRegister()" style="width: 100%; padding: 12px; background: #FF9800; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer;">
                    –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                </button>
            </div>
            
            <div id="teacher-message" style="color: red; margin: 10px 0; text-align: center;"></div>
            
            <button onclick="showModeSelection()" style="width: 100%; padding: 12px; background: #666; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer; margin-top: 20px;">
                ‚Üê –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Ä–µ–∂–∏–º–∞
            </button>
        </div>
    `;
}

// –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –£–ß–ï–ù–ò–ö–ê
function showStudentAuth() {
    const screen = document.getElementById('screen');
    screen.innerHTML = `
        <div style="max-width: 400px; margin: 0 auto; padding: 20px;">
            <h1>üë®‚Äçüéì –†–µ–∂–∏–º —É—á–µ–Ω–∏–∫–∞</h1>
            
            <div style="border: 2px solid #2196F3; padding: 20px; margin: 20px 0; border-radius: 10px;">
                <h2>–í—Ö–æ–¥ –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤</h2>
                <input type="text" id="student-username" placeholder="–ù–∏–∫–Ω–µ–π–º" style="display: block; width: 100%; margin: 10px 0; padding: 10px; font-size: 16px;">
                <input type="password" id="student-password" placeholder="–ü–∞—Ä–æ–ª—å" style="display: block; width: 100%; margin: 10px 0; padding: 10px; font-size: 16px;">
                <button onclick="studentLogin()" style="width: 100%; padding: 12px; background: #2196F3; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer;">
                    –í–æ–π—Ç–∏
                </button>
            </div>
            
            <div style="border: 2px solid #9C27B0; padding: 20px; margin: 20px 0; border-radius: 10px;">
                <h2>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—á–µ–Ω–∏–∫–∞</h2>
                <input type="text" id="student-reg-username" placeholder="–ù–∏–∫–Ω–µ–π–º" style="display: block; width: 100%; margin: 10px 0; padding: 10px; font-size: 16px;">
                <input type="password" id="student-reg-password" placeholder="–ü–∞—Ä–æ–ª—å" style="display: block; width: 100%; margin: 10px 0; padding: 10px; font-size: 16px;">
                <button onclick="studentRegister()" style="width: 100%; padding: 12px; background: #9C27B0; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer;">
                    –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                </button>
            </div>
            
            <div id="student-message" style="color: red; margin: 10px 0; text-align: center;"></div>
            
            <button onclick="showModeSelection()" style="width: 100%; padding: 12px; background: #666; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer; margin-top: 20px;">
                ‚Üê –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Ä–µ–∂–∏–º–∞
            </button>
        </div>
    `;
}

// –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –£–ß–ò–¢–ï–õ–Ø
function teacherRegister() {
    const username = document.getElementById('teacher-reg-username').value.trim();
    const password = document.getElementById('teacher-reg-password').value;
    
    if (!username || !password) {
        showTeacherMessage('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
        return;
    }
    
    if (username.length < 3) {
        showTeacherMessage('–ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤');
        return;
    }
    
    if (password.length < 4) {
        showTeacherMessage('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 4 —Å–∏–º–≤–æ–ª–æ–≤');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É—á–∏—Ç–µ–ª—å
    if (users.teachers.find(u => u.username === username)) {
        showTeacherMessage('–£—á–∏—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –Ω–∏–∫–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
        return;
    }
    
    const newTeacher = {
        username: username,
        password: password,
        type: 'teacher',
        registeredAt: new Date().toISOString()
    };
    
    users.teachers.push(newTeacher);
    saveUsers();
    
    showTeacherMessage('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.', 'green');
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è
    document.getElementById('teacher-reg-username').value = '';
    document.getElementById('teacher-reg-password').value = '';
}

// –í–•–û–î –£–ß–ò–¢–ï–õ–Ø
function teacherLogin() {
    const username = document.getElementById('teacher-username').value.trim();
    const password = document.getElementById('teacher-password').value;
    
    if (!username || !password) {
        showTeacherMessage('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
        return;
    }
    
    const teacher = users.teachers.find(u => u.username === username && u.password === password);
    
    if (!teacher) {
        showTeacherMessage('–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º –∏–ª–∏ –ø–∞—Ä–æ–ª—å!');
        return;
    }
    
    currentUser = teacher;
    isTeacher = true;
    saveCurrentUser();
    showTeacherPanel();
}

// –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –£–ß–ï–ù–ò–ö–ê
function studentRegister() {
    const username = document.getElementById('student-reg-username').value.trim();
    const password = document.getElementById('student-reg-password').value;
    
    if (!username || !password) {
        showStudentMessage('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
        return;
    }
    
    if (username.length < 3) {
        showStudentMessage('–ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤');
        return;
    }
    
    if (password.length < 4) {
        showStudentMessage('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 4 —Å–∏–º–≤–æ–ª–æ–≤');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É—á–µ–Ω–∏–∫
    if (users.students.find(u => u.username === username)) {
        showStudentMessage('–£—á–µ–Ω–∏–∫ —Å —Ç–∞–∫–∏–º –Ω–∏–∫–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
        return;
    }
    
    const newStudent = {
        username: username,
        password: password,
        type: 'student',
        score: 0,
        upgradePoints: 0,
        playerStats: {speed: 1, jump: 1, health: 1},
        levels: JSON.parse(JSON.stringify(levels)),
        registeredAt: new Date().toISOString()
    };
    
    users.students.push(newStudent);
    saveUsers();
    
    showStudentMessage('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.', 'green');
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è
    document.getElementById('student-reg-username').value = '';
    document.getElementById('student-reg-password').value = '';
}

// –í–•–û–î –£–ß–ï–ù–ò–ö–ê
function studentLogin() {
    const username = document.getElementById('student-username').value.trim();
    const password = document.getElementById('student-password').value;
    
    if (!username || !password) {
        showStudentMessage('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
        return;
    }
    
    const student = users.students.find(u => u.username === username && u.password === password);
    
    if (!student) {
        showStudentMessage('–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º –∏–ª–∏ –ø–∞—Ä–æ–ª—å!');
        return;
    }
    
    currentUser = student;
    isTeacher = false;
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —É—á–µ–Ω–∏–∫–∞
    score = student.score || 0;
    upgradePoints = student.upgradePoints || 0;
    playerStats = student.playerStats || {speed: 1, jump: 1, health: 1};
    if (student.levels) {
        levels.forEach((level, index) => {
            if (student.levels[index]) {
                level.completed = student.levels[index].completed || false;
                level.stars = student.levels[index].stars || 0;
            }
        });
    }
    
    saveCurrentUser();
    showMainMenu();
}

// –ü–ê–ù–ï–õ–¨ –£–ß–ò–¢–ï–õ–Ø
function showTeacherPanel() {
    const screen = document.getElementById('screen');
    const studentsList = users.students.map(student => `
        <div style="border: 1px solid #ccc; padding: 15px; margin: 10px 0; border-radius: 8px;">
            <h3>${student.username}</h3>
            <p><strong>–û—á–∫–∏:</strong> ${student.score || 0}</p>
            <p><strong>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:</strong> ${new Date(student.registeredAt).toLocaleDateString()}</p>
            <button onclick="viewStudentProgress('${student.username}')" style="padding: 8px 15px; background: #2196F3; color: white; border: none; border-radius: 4px; cursor: pointer;">
                –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
            </button>
        </div>
    `).join('');
    
    screen.innerHTML = `
        <div style="max-width: 800px; margin: 0 auto; padding: 20px;">
            <h1>üë®‚Äçüè´ –ü–∞–Ω–µ–ª—å —É—á–∏—Ç–µ–ª—è</h1>
            <p style="font-size: 18px;">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <strong>${currentUser.username}</strong>!</p>
            
            <div style="border: 2px solid #4CAF50; padding: 20px; margin: 20px 0; border-radius: 10px;">
                <h2>üìä –°–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤</h2>
                ${studentsList.length > 0 ? studentsList : '<p>–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤</p>'}
            </div>
            
            <div style="border: 2px solid #FF9800; padding: 20px; margin: 20px 0; border-radius: 10px;">
                <h2>‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h2>
                <button onclick="addTestAssignment()" style="padding: 10px 20px; margin: 5px; background: #FF9800; color: white; border: none; border-radius: 5px; cursor: pointer;">
                    –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ
                </button>
                <button onclick="viewClassStatistics()" style="padding: 10px 20px; margin: 5px; background: #9C27B0; color: white; border: none; border-radius: 5px; cursor: pointer;">
                    –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∞—Å—Å–∞
                </button>
            </div>
            
            <button onclick="logout()" style="padding: 12px 25px; background: #ff4444; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer; margin-top: 20px;">
                üö™ –í—ã–π—Ç–∏
            </button>
        </div>
    `;
}

// –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ –£–ß–ï–ù–ò–ö–ê
function showMainMenu() {
    const screen = document.getElementById('screen');
    screen.innerHTML = `
        <div style="max-width: 600px; margin: 0 auto; padding: 20px; text-align: center;">
            <h1>üéÆ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</h1>
            <p style="font-size: 18px;">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <strong>${currentUser.username}</strong>!</p>
            <p>–û—á–∫–∏: <strong>${score}</strong> | –û—á–∫–∏ —É–ª—É—á—à–µ–Ω–∏–π: <strong>${upgradePoints}</strong></p>
            
            <div style="margin: 30px 0;">
                <button onclick="startGame()" style="display: block; width: 100%; padding: 15px; margin: 10px 0; font-size: 18px; background: #4CAF50; color: white; border: none; border-radius: 8px; cursor: pointer;">
                    üéØ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
                </button>
                <button onclick="showLevelSelect()" style="display: block; width: 100%; padding: 15px; margin: 10px 0; font-size: 18px; background: #2196F3; color: white; border: none; border-radius: 8px; cursor: pointer;">
                    üìã –í—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è
                </button>
                <button onclick="showShop()" style="display: block; width: 100%; padding: 15px; margin: 10px 0; font-size: 18px; background: #FF9800; color: white; border: none; border-radius: 8px; cursor: pointer;">
                    üè™ –ú–∞–≥–∞–∑–∏–Ω
                </button>
                <button onclick="showWorkshop()" style="display: block; width: 100%; padding: 15px; margin: 10px 0; font-size: 18px; background: #9C27B0; color: white; border: none; border-radius: 8px; cursor: pointer;">
                    üîß –ú–∞—Å—Ç–µ—Ä—Å–∫–∞—è
                </button>
                <button onclick="showScoreShop()" style="display: block; width: 100%; padding: 15px; margin: 10px 0; font-size: 18px; background: #E91E63; color: white; border: none; border-radius: 8px; cursor: pointer;">
                    üìä –ú–∞–≥–∞–∑–∏–Ω –æ—Ü–µ–Ω–æ–∫
                </button>
                <button onclick="showSettings()" style="display: block; width: 100%; padding: 15px; margin: 10px 0; font-size: 18px; background: #607D8B; color: white; border: none; border-radius: 8px; cursor: pointer;">
                    ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
                </button>
            </div>
            
            <button onclick="logout()" style="padding: 12px 25px; background: #ff4444; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer;">
                üö™ –í—ã–π—Ç–∏
            </button>
        </div>
    `;
}

// –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
function showTeacherMessage(message, color = 'red') {
    const messageEl = document.getElementById('teacher-message');
    if (messageEl) {
        messageEl.textContent = message;
        messageEl.style.color = color;
    }
}

function showStudentMessage(message, color = 'red') {
    const messageEl = document.getElementById('student-message');
    if (messageEl) {
        messageEl.textContent = message;
        messageEl.style.color = color;
    }
}

function logout() {
    currentUser = null;
    isTeacher = false;
    saveCurrentUser();
    showModeSelection();
}

// –û–°–¢–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
function startGame() {
    currentLevel = 0;
    loadLevel(currentLevel);
}

function showLevelSelect() {
    const screen = document.getElementById('screen');
    let levelsHTML = '';
    
    levels.forEach((level, index) => {
        levelsHTML += `
            <div style="border: 1px solid #ccc; padding: 15px; margin: 10px 0; border-radius: 8px;">
                <h3>${level.name}</h3>
                <p>–°–ª–æ–∂–Ω–æ—Å—Ç—å: ${level.difficulty}</p>
                <p>–°—Ç–∞—Ç—É—Å: ${level.completed ? '‚úÖ –ü—Ä–æ–π–¥–µ–Ω' : '‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω'}</p>
                <p>–ó–≤—ë–∑–¥—ã: ${'‚òÖ'.repeat(level.stars)}${'‚òÜ'.repeat(3-level.stars)}</p>
                <button onclick="loadLevel(${index})" style="padding: 10px 20px; background: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer;">
                    –ò–≥—Ä–∞—Ç—å
                </button>
            </div>
        `;
    });
    
    screen.innerHTML = `
        <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
            <h2>üéØ –í—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è</h2>
            ${levelsHTML}
            <button onclick="showMainMenu()" style="padding: 12px 25px; background: #ff4444; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer; margin-top: 20px;">
                ‚Üê –ù–∞–∑–∞–¥
            </button>
        </div>
    `;
}

function showShop() {
    const screen = document.getElementById('screen');
    screen.innerHTML = `
        <div style="max-width: 600px; margin: 0 auto; padding: 20px; text-align: center;">
            <h2>üè™ –ú–∞–≥–∞–∑–∏–Ω</h2>
            <p>–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏!</p>
            <button onclick="showMainMenu()" style="padding: 12px 25px; background: #ff4444; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer; margin-top: 20px;">
                ‚Üê –ù–∞–∑–∞–¥
            </button>
        </div>
    `;
}

function showWorkshop() {
    const screen = document.getElementById('screen');
    screen.innerHTML = `
        <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
            <h2>üîß –ú–∞—Å—Ç–µ—Ä—Å–∫–∞—è</h2>
            <p>–û—á–∫–∏ —É–ª—É—á—à–µ–Ω–∏—è: <strong id="upgrade-points">${upgradePoints}</strong></p>
            
            <div style="border: 1px solid #ccc; padding: 15px; margin: 15px 0; border-radius: 8px;">
                <h3>üèÉ –°–∫–æ—Ä–æ—Å—Ç—å</h3>
                <p>–£—Ä–æ–≤–µ–Ω—å: <strong id="speed-level">${playerStats.speed}</strong></p>
                <button onclick="upgradeStat('speed')" style="padding: 10px 20px; background: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer;">
                    –£–ª—É—á—à–∏—Ç—å (10 –æ—á–∫–æ–≤)
                </button>
            </div>
            
            <div style="border: 1px solid #ccc; padding: 15px; margin: 15px 0; border-radius: 8px;">
                <h3>ü¶ò –ü—Ä—ã–∂–æ–∫</h3>
                <p>–£—Ä–æ–≤–µ–Ω—å: <strong id="jump-level">${playerStats.jump}</strong></p>
                <button onclick="upgradeStat('jump')" style="padding: 10px 20px; background: #2196F3; color: white; border: none; border-radius: 5px; cursor: pointer;">
                    –£–ª—É—á—à–∏—Ç—å (10 –æ—á–∫–æ–≤)
                </button>
            </div>
            
            <div style="border: 1px solid #ccc; padding: 15px; margin: 15px 0; border-radius: 8px;">
                <h3>‚ù§Ô∏è –ü—Ä–æ—á–Ω–æ—Å—Ç—å</h3>
                <p>–£—Ä–æ–≤–µ–Ω—å: <strong id="health-level">${playerStats.health}</strong></p>
                <button onclick="upgradeStat('health')" style="padding: 10px 20px; background: #E91E63; color: white; border: none; border-radius: 5px; cursor: pointer;">
                    –£–ª—É—á—à–∏—Ç—å (15 –æ—á–∫–æ–≤)
                </button>
            </div>
            
            <button onclick="showMainMenu()" style="padding: 12px 25px; background: #ff4444; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer; margin-top: 20px;">
                ‚Üê –ù–∞–∑–∞–¥
            </button>
        </div>
    `;
}

function showScoreShop() {
    const screen = document.getElementById('screen');
    screen.innerHTML = `
        <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
            <h2>üìä –ú–∞–≥–∞–∑–∏–Ω –æ—Ü–µ–Ω–æ–∫</h2>
            <p>–í–∞—à–∏ –æ—á–∫–∏: <strong id="score-points">${score}</strong></p>
            
            <div style="border: 1px solid #ccc; padding: 15px; margin: 15px 0; border-radius: 8px;">
                <h3>üéØ –û—Ü–µ–Ω–∫–∞ 5</h3>
                <p>–°—Ç–æ–∏–º–æ—Å—Ç—å: 100 –æ—á–∫–æ–≤</p>
                <button onclick="buyGrade(5)" style="padding: 10px 20px; background: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer;">
                    –ö—É–ø–∏—Ç—å
                </button>
            </div>
            
            <div style="border: 1px solid #ccc; padding: 15px; margin: 15px 0; border-radius: 8px;">
                <h3>üìó –û—Ü–µ–Ω–∫–∞ 4</h3>
                <p>–°—Ç–æ–∏–º–æ—Å—Ç—å: 75 –æ—á–∫–æ–≤</p>
                <button onclick="buyGrade(4)" style="padding: 10px 20px; background: #2196F3; color: white; border: none; border-radius: 5px; cursor: pointer;">
                    –ö—É–ø–∏—Ç—å
                </button>
            </div>
            
            <div style="border: 1px solid #ccc; padding: 15px; margin: 15px 0; border-radius: 8px;">
                <h3>üìò –û—Ü–µ–Ω–∫–∞ 3</h3>
                <p>–°—Ç–æ–∏–º–æ—Å—Ç—å: 50 –æ—á–∫–æ–≤</p>
                <button onclick="buyGrade(3)" style="padding: 10px 20px; background: #FF9800; color: white; border: none; border-radius: 5px; cursor: pointer;">
                    –ö—É–ø–∏—Ç—å
                </button>
            </div>
            
            <button onclick="showMainMenu()" style="padding: 12px 25px; background: #ff4444; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer; margin-top: 20px;">
                ‚Üê –ù–∞–∑–∞–¥
            </button>
        </div>
    `;
}

function showSettings() {
    const screen = document.getElementById('screen');
    screen.innerHTML = `
        <div style="max-width: 600px; margin: 0 auto; padding: 20px; text-align: center;">
            <h2>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
            <p>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–≤—É–∫–∞, –≥—Ä–∞—Ñ–∏–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å —Å–∫–æ—Ä–æ!</p>
            <button onclick="showMainMenu()" style="padding: 12px 25px; background: #ff4444; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer; margin-top: 20px;">
                ‚Üê –ù–∞–∑–∞–¥
            </button>
        </div>
    `;
}

function loadLevel(levelIndex) {
    currentLevel = levelIndex;
    const screen = document.getElementById('screen');
    screen.innerHTML = `
        <div style="max-width: 600px; margin: 0 auto; padding: 20px; text-align: center;">
            <h2>üéÆ –£—Ä–æ–≤–µ–Ω—å ${levelIndex + 1} - ${levels[levelIndex].name}</h2>
            <p>–°–ª–æ–∂–Ω–æ—Å—Ç—å: ${levels[levelIndex].difficulty}</p>
            
            <div style="border: 2px solid #ccc; padding: 20px; margin: 20px 0; border-radius: 10px;">
                <h3>üéØ –ò–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ü–µ—Å—Å</h3>
                <p>–ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤–∞—à–∞ –∏–≥—Ä–∞!</p>
                <p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ‚Üê ‚Üí –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è, –ü–†–û–ë–ï–õ –¥–ª—è –ø—Ä—ã–∂–∫–∞</p>
            </div>
            
            <button onclick="completeLevel(${levelIndex})" style="padding: 12px 25px; background: #4CAF50; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer;">
                ‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å (—Ç–µ—Å—Ç)
            </button>
            <br>
            <button onclick="showLevelSelect()" style="padding: 12px 25px; background: #ff4444; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer; margin-top: 10px;">
                üö™ –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é
            </button>
        </div>
    `;
}

function completeLevel(levelIndex) {
    levels[levelIndex].completed = true;
    levels[levelIndex].stars = Math.min(3, levels[levelIndex].stars + 1);
    score += 50;
    upgradePoints += 5;
    saveGame();
    alert(`üéâ –£—Ä–æ–≤–µ–Ω—å ${levelIndex + 1} –ø—Ä–æ–π–¥–µ–Ω!\n+50 –æ—á–∫–æ–≤\n+5 –æ—á–∫–æ–≤ —É–ª—É—á—à–µ–Ω–∏—è`);
    showLevelSelect();
}

function upgradeStat(stat) {
    const cost = stat === 'health' ? 15 : 10;
    
    if (upgradePoints >= cost) {
        upgradePoints -= cost;
        playerStats[stat]++;
        updateWorkshopDisplay();
        saveGame();
        alert(`‚úÖ ${stat === 'speed' ? '–°–∫–æ—Ä–æ—Å—Ç—å' : stat === 'jump' ? '–ü—Ä—ã–∂–æ–∫' : '–ü—Ä–æ—á–Ω–æ—Å—Ç—å'} —É–ª—É—á—à–µ–Ω–∞ –¥–æ —É—Ä–æ–≤–Ω—è ${playerStats[stat]}!`);
    } else {
        alert('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∫–æ–≤ —É–ª—É—á—à–µ–Ω–∏—è!');
    }
}

function updateWorkshopDisplay() {
    const upgradePointsEl = document.getElementById('upgrade-points');
    const speedLevelEl = document.getElementById('speed-level');
    const jumpLevelEl = document.getElementById('jump-level');
    const healthLevelEl = document.getElementById('health-level');
    
    if (upgradePointsEl) upgradePointsEl.textContent = upgradePoints;
    if (speedLevelEl) speedLevelEl.textContent = playerStats.speed;
    if (jumpLevelEl) jumpLevelEl.textContent = playerStats.jump;
    if (healthLevelEl) healthLevelEl.textContent = playerStats.health;
}

function buyGrade(grade) {
    const costs = {3: 50, 4: 75, 5: 100};
    const cost = costs[grade];
    
    if (score >= cost) {
        score -= cost;
        alert(`üéâ –í—ã –∫—É–ø–∏–ª–∏ –æ—Ü–µ–Ω–∫—É ${grade}!`);
        updateScoreShopDisplay();
        saveGame();
    } else {
        alert('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∫–æ–≤!');
    }
}

function updateScoreShopDisplay() {
    const scorePointsEl = document.getElementById('score-points');
    if (scorePointsEl) {
        scorePointsEl.textContent = score;
    }
}

function viewStudentProgress(studentUsername) {
    const student = users.students.find(s => s.username === studentUsername);
    if (!student) return;
    
    const screen = document.getElementById('screen');
    const levelsProgress = student.levels ? student.levels.map(level => `
        <div style="margin: 8px 0; padding: 8px; background: #f5f5f5; border-radius: 5px;">
            ${level.name}: ${level.completed ? '‚úÖ –ü—Ä–æ–π–¥–µ–Ω' : '‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω'} 
            ${level.completed ? `(‚òÖ ${level.stars}/3)` : ''}
        </div>
    `).join('') : '<p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ</p>';
    
    screen.innerHTML = `
        <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
            <h2>üìä –ü—Ä–æ–≥—Ä–µ—Å—Å —É—á–µ–Ω–∏–∫–∞: ${student.username}</h2>
            
            <div style="border: 2px solid #2196F3; padding: 15px; margin: 15px 0; border-radius: 8px;">
                <h3>üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                <p><strong>–û—á–∫–∏:</strong> ${student.score || 0}</p>
                <p><strong>–û—á–∫–∏ —É–ª—É—á—à–µ–Ω–∏–π:</strong> ${student.upgradePoints || 0}</p>
            </div>
            
            <div style="border: 2px solid #4CAF50; padding: 15px; margin: 15px 0; border-radius: 8px;">
                <h3>üéØ –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —É—Ä–æ–≤–Ω—è–º:</h3>
                ${levelsProgress}
            </div>
            
            <div style="border: 2px solid #9C27B0; padding: 15px; margin: 15px 0; border-radius: 8px;">
                <h3>‚ö° –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</h3>
                <p>üèÉ –°–∫–æ—Ä–æ—Å—Ç—å: ${student.playerStats?.speed || 1}</p>
                <p>ü¶ò –ü—Ä—ã–∂–æ–∫: ${student.playerStats?.jump || 1}</p>
                <p>‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: ${student.playerStats?.health || 1}</p>
            </div>
            
            <button onclick="showTeacherPanel()" style="padding: 12px 25px; background: #ff4444; color: white; border: none; border-radius: 5px; font-size: 16px; cursor: pointer;">
                ‚Üê –ù–∞–∑–∞–¥ –∫ –ø–∞–Ω–µ–ª–∏
            </button>
        </div>
    `;
}

function addTestAssignment() {
    const assignmentName = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è:');
    if (assignmentName) {
        alert(`‚úÖ –ó–∞–¥–∞–Ω–∏–µ "${assignmentName}" –¥–æ–±–∞–≤–ª–µ–Ω–æ!`);
    }
}

function viewClassStatistics() {
    const totalStudents = users.students.length;
    const avgScore = totalStudents > 0 
        ? users.students.reduce((sum, student) => sum + (student.score || 0), 0) / totalStudents 
        : 0;
    
    const completedLevels = users.students.reduce((sum, student) => {
        if (!student.levels) return sum;
        return sum + student.levels.filter(level => level.completed).length;
    }, 0);
    
    alert(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∞—Å—Å–∞:
üë®‚Äçüéì –£—á–µ–Ω–∏–∫–æ–≤: ${totalStudents}
üìà –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: ${Math.round(avgScore)}
üéØ –í—Å–µ–≥–æ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π: ${completedLevels}`);
}

// –°–ò–°–¢–ï–ú–ê –°–û–•–†–ê–ù–ï–ù–ò–Ø
function saveGame() {
    if (!isTeacher && currentUser) {
        currentUser.score = score;
        currentUser.upgradePoints = upgradePoints;
        currentUser.playerStats = playerStats;
        currentUser.levels = levels;
        
        const userIndex = users.students.findIndex(u => u.username === currentUser.username);
        if (userIndex !== -1) {
            users.students[userIndex] = currentUser;
        }
        
        saveUsers();
    }
    
    localStorage.setItem('gameSave', JSON.stringify({
        score: score,
        upgradePoints: upgradePoints,
        playerStats: playerStats,
        levels: levels,
        currentLevel: currentLevel
    }));
}

function saveUsers() {
    localStorage.setItem('schoolUsers', JSON.stringify(users));
}

function saveCurrentUser() {
    localStorage.setItem('currentSchoolUser', JSON.stringify(currentUser));
}

function loadUsers() {
    const savedUsers = localStorage.getItem('schoolUsers');
    if (savedUsers) {
        users = JSON.parse(savedUsers);
    }
}

function loadCurrentUser() {
    const savedUser = localStorage.getItem('currentSchoolUser');
    if (savedUser) {
        currentUser = JSON.parse(savedUser);
        isTeacher = currentUser.type === 'teacher';
        return true;
    }
    return false;
}

// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
window.addEventListener('load', function() {
    loadUsers();
    
    if (loadCurrentUser()) {
        if (isTeacher) {
            showTeacherPanel();
        } else {
            score = currentUser.score || 0;
            upgradePoints = currentUser.upgradePoints || 0;
            playerStats = currentUser.playerStats || {speed: 1, jump: 1, health: 1};
            if (currentUser.levels) {
                levels.forEach((level, index) => {
                    if (currentUser.levels[index]) {
                        level.completed = currentUser.levels[index].completed || false;
                        level.stars = currentUser.levels[index].stars || 0;
                    }
                });
            }
            showMainMenu();
        }
    } else {
        showModeSelection();
    }
});
